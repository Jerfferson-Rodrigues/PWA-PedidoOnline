{"ast":null,"code":"import { _ as _objectWithoutPropertiesLoose } from '../../_rollupPluginBabelHelpers-6b3bd404.js';\nimport ChangeDetails from '../../core/change-details.js';\nimport { isString } from '../../core/utils.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport IMask from '../../core/holder.js';\nconst _excluded = [\"chunks\"];\n\nclass ChunksTailDetails {\n  /** */\n  constructor() {\n    let chunks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this.chunks = chunks;\n    this.from = from;\n  }\n\n  toString() {\n    return this.chunks.map(String).join('');\n  } // $FlowFixMe no ideas\n\n\n  extend(tailChunk) {\n    if (!String(tailChunk)) return;\n    if (isString(tailChunk)) tailChunk = new ContinuousTailDetails(String(tailChunk));\n    const lastChunk = this.chunks[this.chunks.length - 1];\n    const extendLast = lastChunk && ( // if stops are same or tail has no stop\n    lastChunk.stop === tailChunk.stop || tailChunk.stop == null) && // if tail chunk goes just after last chunk\n    tailChunk.from === lastChunk.from + lastChunk.toString().length;\n\n    if (tailChunk instanceof ContinuousTailDetails) {\n      // check the ability to extend previous chunk\n      if (extendLast) {\n        // extend previous chunk\n        lastChunk.extend(tailChunk.toString());\n      } else {\n        // append new chunk\n        this.chunks.push(tailChunk);\n      }\n    } else if (tailChunk instanceof ChunksTailDetails) {\n      if (tailChunk.stop == null) {\n        // unwrap floating chunks to parent, keeping `from` pos\n        let firstTailChunk;\n\n        while (tailChunk.chunks.length && tailChunk.chunks[0].stop == null) {\n          firstTailChunk = tailChunk.chunks.shift();\n          firstTailChunk.from += tailChunk.from;\n          this.extend(firstTailChunk);\n        }\n      } // if tail chunk still has value\n\n\n      if (tailChunk.toString()) {\n        // if chunks contains stops, then popup stop to container\n        tailChunk.stop = tailChunk.blockIndex;\n        this.chunks.push(tailChunk);\n      }\n    }\n  }\n\n  appendTo(masked) {\n    // $FlowFixMe\n    if (!(masked instanceof IMask.MaskedPattern)) {\n      const tail = new ContinuousTailDetails(this.toString());\n      return tail.appendTo(masked);\n    }\n\n    const details = new ChangeDetails();\n\n    for (let ci = 0; ci < this.chunks.length && !details.skip; ++ci) {\n      const chunk = this.chunks[ci];\n\n      const lastBlockIter = masked._mapPosToBlock(masked.value.length);\n\n      const stop = chunk.stop;\n      let chunkBlock;\n\n      if (stop != null && ( // if block not found or stop is behind lastBlock\n      !lastBlockIter || lastBlockIter.index <= stop)) {\n        if (chunk instanceof ChunksTailDetails || // for continuous block also check if stop is exist\n        masked._stops.indexOf(stop) >= 0) {\n          details.aggregate(masked._appendPlaceholder(stop));\n        }\n\n        chunkBlock = chunk instanceof ChunksTailDetails && masked._blocks[stop];\n      }\n\n      if (chunkBlock) {\n        const tailDetails = chunkBlock.appendTail(chunk);\n        tailDetails.skip = false; // always ignore skip, it will be set on last\n\n        details.aggregate(tailDetails);\n        masked._value += tailDetails.inserted; // get not inserted chars\n\n        const remainChars = chunk.toString().slice(tailDetails.rawInserted.length);\n        if (remainChars) details.aggregate(masked.append(remainChars, {\n          tail: true\n        }));\n      } else {\n        details.aggregate(masked.append(chunk.toString(), {\n          tail: true\n        }));\n      }\n    }\n\n    return details;\n  }\n\n  get state() {\n    return {\n      chunks: this.chunks.map(c => c.state),\n      from: this.from,\n      stop: this.stop,\n      blockIndex: this.blockIndex\n    };\n  }\n\n  set state(state) {\n    const {\n      chunks\n    } = state,\n          props = _objectWithoutPropertiesLoose(state, _excluded);\n\n    Object.assign(this, props);\n    this.chunks = chunks.map(cstate => {\n      const chunk = \"chunks\" in cstate ? new ChunksTailDetails() : new ContinuousTailDetails(); // $FlowFixMe already checked above\n\n      chunk.state = cstate;\n      return chunk;\n    });\n  }\n\n  unshift(beforePos) {\n    if (!this.chunks.length || beforePos != null && this.from >= beforePos) return '';\n    const chunkShiftPos = beforePos != null ? beforePos - this.from : beforePos;\n    let ci = 0;\n\n    while (ci < this.chunks.length) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.unshift(chunkShiftPos);\n\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        ++ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n\n      if (shiftChar) return shiftChar;\n    }\n\n    return '';\n  }\n\n  shift() {\n    if (!this.chunks.length) return '';\n    let ci = this.chunks.length - 1;\n\n    while (0 <= ci) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.shift();\n\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        --ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n\n      if (shiftChar) return shiftChar;\n    }\n\n    return '';\n  }\n\n}\n\nexport { ChunksTailDetails as default };","map":{"version":3,"names":["_","_objectWithoutPropertiesLoose","ChangeDetails","isString","ContinuousTailDetails","IMask","_excluded","ChunksTailDetails","constructor","chunks","arguments","length","undefined","from","toString","map","String","join","extend","tailChunk","lastChunk","extendLast","stop","push","firstTailChunk","shift","blockIndex","appendTo","masked","MaskedPattern","tail","details","ci","skip","chunk","lastBlockIter","_mapPosToBlock","value","chunkBlock","index","_stops","indexOf","aggregate","_appendPlaceholder","_blocks","tailDetails","appendTail","_value","inserted","remainChars","slice","rawInserted","append","state","c","props","Object","assign","cstate","unshift","beforePos","chunkShiftPos","shiftChar","splice","default"],"sources":["D:/React/PedidoOnline/node_modules/imask/esm/masked/pattern/chunk-tail-details.js"],"sourcesContent":["import { _ as _objectWithoutPropertiesLoose } from '../../_rollupPluginBabelHelpers-6b3bd404.js';\nimport ChangeDetails from '../../core/change-details.js';\nimport { isString } from '../../core/utils.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport IMask from '../../core/holder.js';\n\nconst _excluded = [\"chunks\"];\nclass ChunksTailDetails {\n  /** */\n\n  constructor() {\n    let chunks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this.chunks = chunks;\n    this.from = from;\n  }\n  toString() {\n    return this.chunks.map(String).join('');\n  }\n\n  // $FlowFixMe no ideas\n  extend(tailChunk) {\n    if (!String(tailChunk)) return;\n    if (isString(tailChunk)) tailChunk = new ContinuousTailDetails(String(tailChunk));\n    const lastChunk = this.chunks[this.chunks.length - 1];\n    const extendLast = lastChunk && (\n    // if stops are same or tail has no stop\n    lastChunk.stop === tailChunk.stop || tailChunk.stop == null) &&\n    // if tail chunk goes just after last chunk\n    tailChunk.from === lastChunk.from + lastChunk.toString().length;\n    if (tailChunk instanceof ContinuousTailDetails) {\n      // check the ability to extend previous chunk\n      if (extendLast) {\n        // extend previous chunk\n        lastChunk.extend(tailChunk.toString());\n      } else {\n        // append new chunk\n        this.chunks.push(tailChunk);\n      }\n    } else if (tailChunk instanceof ChunksTailDetails) {\n      if (tailChunk.stop == null) {\n        // unwrap floating chunks to parent, keeping `from` pos\n        let firstTailChunk;\n        while (tailChunk.chunks.length && tailChunk.chunks[0].stop == null) {\n          firstTailChunk = tailChunk.chunks.shift();\n          firstTailChunk.from += tailChunk.from;\n          this.extend(firstTailChunk);\n        }\n      }\n\n      // if tail chunk still has value\n      if (tailChunk.toString()) {\n        // if chunks contains stops, then popup stop to container\n        tailChunk.stop = tailChunk.blockIndex;\n        this.chunks.push(tailChunk);\n      }\n    }\n  }\n  appendTo(masked) {\n    // $FlowFixMe\n    if (!(masked instanceof IMask.MaskedPattern)) {\n      const tail = new ContinuousTailDetails(this.toString());\n      return tail.appendTo(masked);\n    }\n    const details = new ChangeDetails();\n    for (let ci = 0; ci < this.chunks.length && !details.skip; ++ci) {\n      const chunk = this.chunks[ci];\n      const lastBlockIter = masked._mapPosToBlock(masked.value.length);\n      const stop = chunk.stop;\n      let chunkBlock;\n      if (stop != null && (\n      // if block not found or stop is behind lastBlock\n      !lastBlockIter || lastBlockIter.index <= stop)) {\n        if (chunk instanceof ChunksTailDetails ||\n        // for continuous block also check if stop is exist\n        masked._stops.indexOf(stop) >= 0) {\n          details.aggregate(masked._appendPlaceholder(stop));\n        }\n        chunkBlock = chunk instanceof ChunksTailDetails && masked._blocks[stop];\n      }\n      if (chunkBlock) {\n        const tailDetails = chunkBlock.appendTail(chunk);\n        tailDetails.skip = false; // always ignore skip, it will be set on last\n        details.aggregate(tailDetails);\n        masked._value += tailDetails.inserted;\n\n        // get not inserted chars\n        const remainChars = chunk.toString().slice(tailDetails.rawInserted.length);\n        if (remainChars) details.aggregate(masked.append(remainChars, {\n          tail: true\n        }));\n      } else {\n        details.aggregate(masked.append(chunk.toString(), {\n          tail: true\n        }));\n      }\n    }\n    return details;\n  }\n  get state() {\n    return {\n      chunks: this.chunks.map(c => c.state),\n      from: this.from,\n      stop: this.stop,\n      blockIndex: this.blockIndex\n    };\n  }\n  set state(state) {\n    const {\n        chunks\n      } = state,\n      props = _objectWithoutPropertiesLoose(state, _excluded);\n    Object.assign(this, props);\n    this.chunks = chunks.map(cstate => {\n      const chunk = \"chunks\" in cstate ? new ChunksTailDetails() : new ContinuousTailDetails();\n      // $FlowFixMe already checked above\n      chunk.state = cstate;\n      return chunk;\n    });\n  }\n  unshift(beforePos) {\n    if (!this.chunks.length || beforePos != null && this.from >= beforePos) return '';\n    const chunkShiftPos = beforePos != null ? beforePos - this.from : beforePos;\n    let ci = 0;\n    while (ci < this.chunks.length) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.unshift(chunkShiftPos);\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        ++ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n      if (shiftChar) return shiftChar;\n    }\n    return '';\n  }\n  shift() {\n    if (!this.chunks.length) return '';\n    let ci = this.chunks.length - 1;\n    while (0 <= ci) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.shift();\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        --ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n      if (shiftChar) return shiftChar;\n    }\n    return '';\n  }\n}\n\nexport { ChunksTailDetails as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}