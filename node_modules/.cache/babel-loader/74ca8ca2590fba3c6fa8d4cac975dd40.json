{"ast":null,"code":"import { isValidCNPJ, isValidCPF, isValidPhone } from '@brazilian-utils/brazilian-utils';\nimport * as yup from 'yup';\nexport const schema = yup.object({\n  fullName: yup.string().required('O nome é obrigatório.').min(3, 'O nome deve ser completo.').matches(/(\\w.+\\s).+/gi, 'O nome deve conter o sobrenome.'),\n  email: yup.string().required('O email é obrigatório.').email('O email deve ser válido.'),\n  mobile: yup.string().required('O celular é obrigatório.').transform(value => value.replace(/[^\\d]/g, '')).test('validateMobile', 'O celular inválido.', value => isValidPhone(value)),\n  document: yup.string().required('O CPF/CNPJ é obrigatório.').transform(value => value.replace(/[^\\d]/g, '')).test('validateDocument', 'O CPF/CNPJ é inválido.', value => isValidCPF(value) || isValidCNPJ(value)),\n  zipCode: yup.string().required('O CEP é obrigatório.').transform(val => val.replace(/[^\\d]+/g, '')),\n  street: yup.string().required('O endereço é obrigatório.'),\n  number: yup.string().required('O número é obrigatório.'),\n  complement: yup.string(),\n  neighborhood: yup.string().required('O bairro é obrigatório.'),\n  city: yup.string().required('A cidade é obrigatória.'),\n  state: yup.string().required('O estado é obrigatório.')\n}).required();","map":{"version":3,"names":["isValidCNPJ","isValidCPF","isValidPhone","yup","schema","object","fullName","string","required","min","matches","email","mobile","transform","value","replace","test","document","zipCode","val","street","number","complement","neighborhood","city","state"],"sources":["D:/React/PedidoOnline/src/pages/Payment/validationSchema.tsx"],"sourcesContent":["import { isValidCNPJ, isValidCPF, isValidPhone } from '@brazilian-utils/brazilian-utils'\nimport * as yup from 'yup'\n\nexport const schema = yup\n  .object({\n    fullName: yup\n      .string()\n      .required('O nome é obrigatório.')\n      .min(3, 'O nome deve ser completo.')\n      .matches(/(\\w.+\\s).+/gi, 'O nome deve conter o sobrenome.'),\n    email: yup.string().required('O email é obrigatório.').email('O email deve ser válido.'),\n    mobile: yup\n      .string()\n      .required('O celular é obrigatório.')\n      .transform((value) => value.replace(/[^\\d]/g, ''))\n      .test('validateMobile', 'O celular inválido.', (value) => isValidPhone(value)),\n    document: yup\n      .string()\n      .required('O CPF/CNPJ é obrigatório.')\n      .transform((value) => value.replace(/[^\\d]/g, ''))\n      .test(\n        'validateDocument',\n        'O CPF/CNPJ é inválido.',\n        (value) => isValidCPF(value) || isValidCNPJ(value),\n      ),\n    zipCode: yup\n      .string()\n      .required('O CEP é obrigatório.')\n      .transform((val) => val.replace(/[^\\d]+/g, '')),\n    street: yup.string().required('O endereço é obrigatório.'),\n    number: yup.string().required('O número é obrigatório.'),\n    complement: yup.string(),\n    neighborhood: yup.string().required('O bairro é obrigatório.'),\n    city: yup.string().required('A cidade é obrigatória.'),\n    state: yup.string().required('O estado é obrigatório.'),\n  })\n  .required()\n\nexport type FieldValues = yup.InferType<typeof schema>\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,UAAtB,EAAkCC,YAAlC,QAAsD,kCAAtD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,OAAO,MAAMC,MAAM,GAAGD,GAAG,CACtBE,MADmB,CACZ;EACNC,QAAQ,EAAEH,GAAG,CACVI,MADO,GAEPC,QAFO,CAEE,uBAFF,EAGPC,GAHO,CAGH,CAHG,EAGA,2BAHA,EAIPC,OAJO,CAIC,cAJD,EAIiB,iCAJjB,CADJ;EAMNC,KAAK,EAAER,GAAG,CAACI,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,EAAgDG,KAAhD,CAAsD,0BAAtD,CAND;EAONC,MAAM,EAAET,GAAG,CACRI,MADK,GAELC,QAFK,CAEI,0BAFJ,EAGLK,SAHK,CAGMC,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAc,QAAd,EAAwB,EAAxB,CAHhB,EAILC,IAJK,CAIA,gBAJA,EAIkB,qBAJlB,EAI0CF,KAAD,IAAWZ,YAAY,CAACY,KAAD,CAJhE,CAPF;EAYNG,QAAQ,EAAEd,GAAG,CACVI,MADO,GAEPC,QAFO,CAEE,2BAFF,EAGPK,SAHO,CAGIC,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAc,QAAd,EAAwB,EAAxB,CAHd,EAIPC,IAJO,CAKN,kBALM,EAMN,wBANM,EAOLF,KAAD,IAAWb,UAAU,CAACa,KAAD,CAAV,IAAqBd,WAAW,CAACc,KAAD,CAPrC,CAZJ;EAqBNI,OAAO,EAAEf,GAAG,CACTI,MADM,GAENC,QAFM,CAEG,sBAFH,EAGNK,SAHM,CAGKM,GAAD,IAASA,GAAG,CAACJ,OAAJ,CAAY,SAAZ,EAAuB,EAAvB,CAHb,CArBH;EAyBNK,MAAM,EAAEjB,GAAG,CAACI,MAAJ,GAAaC,QAAb,CAAsB,2BAAtB,CAzBF;EA0BNa,MAAM,EAAElB,GAAG,CAACI,MAAJ,GAAaC,QAAb,CAAsB,yBAAtB,CA1BF;EA2BNc,UAAU,EAAEnB,GAAG,CAACI,MAAJ,EA3BN;EA4BNgB,YAAY,EAAEpB,GAAG,CAACI,MAAJ,GAAaC,QAAb,CAAsB,yBAAtB,CA5BR;EA6BNgB,IAAI,EAAErB,GAAG,CAACI,MAAJ,GAAaC,QAAb,CAAsB,yBAAtB,CA7BA;EA8BNiB,KAAK,EAAEtB,GAAG,CAACI,MAAJ,GAAaC,QAAb,CAAsB,yBAAtB;AA9BD,CADY,EAiCnBA,QAjCmB,EAAf"},"metadata":{},"sourceType":"module"}