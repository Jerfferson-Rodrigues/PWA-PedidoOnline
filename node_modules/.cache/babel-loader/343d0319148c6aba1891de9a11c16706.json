{"ast":null,"code":"import { _ as _objectWithoutPropertiesLoose } from '../_rollupPluginBabelHelpers-6b3bd404.js';\nimport { objectIncludes, DIRECTION } from '../core/utils.js';\nimport ActionDetails from '../core/action-details.js';\nimport '../masked/date.js';\nimport createMask, { maskedClass } from '../masked/factory.js';\nimport MaskElement from './mask-element.js';\nimport HTMLMaskElement from './html-mask-element.js';\nimport HTMLContenteditableMaskElement from './html-contenteditable-mask-element.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport '../masked/pattern.js';\nimport '../masked/base.js';\nimport '../core/continuous-tail-details.js';\nimport '../masked/pattern/input-definition.js';\nimport '../masked/pattern/fixed-definition.js';\nimport '../masked/pattern/chunk-tail-details.js';\nimport '../masked/pattern/cursor.js';\nimport '../masked/regexp.js';\nimport '../masked/range.js';\nconst _excluded = [\"mask\"];\n/** Listens to element events and controls changes between element and {@link Masked} */\n\nclass InputMask {\n  /**\n    View element\n    @readonly\n  */\n\n  /**\n    Internal {@link Masked} model\n    @readonly\n  */\n\n  /**\n    @param {MaskElement|HTMLInputElement|HTMLTextAreaElement} el\n    @param {Object} opts\n  */\n  constructor(el, opts) {\n    this.el = el instanceof MaskElement ? el : el.isContentEditable && el.tagName !== 'INPUT' && el.tagName !== 'TEXTAREA' ? new HTMLContenteditableMaskElement(el) : new HTMLMaskElement(el);\n    this.masked = createMask(opts);\n    this._listeners = {};\n    this._value = '';\n    this._unmaskedValue = '';\n    this._saveSelection = this._saveSelection.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._onChange = this._onChange.bind(this);\n    this._onDrop = this._onDrop.bind(this);\n    this._onFocus = this._onFocus.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this.alignCursor = this.alignCursor.bind(this);\n    this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\n\n    this._bindEvents(); // refresh\n\n\n    this.updateValue();\n\n    this._onChange();\n  }\n  /** Read or update mask */\n\n\n  get mask() {\n    return this.masked.mask;\n  }\n\n  maskEquals(mask) {\n    var _this$masked;\n\n    return mask == null || ((_this$masked = this.masked) === null || _this$masked === void 0 ? void 0 : _this$masked.maskEquals(mask));\n  }\n\n  set mask(mask) {\n    if (this.maskEquals(mask)) return; // $FlowFixMe No ideas ... after update\n\n    if (!(mask instanceof IMask.Masked) && this.masked.constructor === maskedClass(mask)) {\n      this.masked.updateOptions({\n        mask\n      });\n      return;\n    }\n\n    const masked = createMask({\n      mask\n    });\n    masked.unmaskedValue = this.masked.unmaskedValue;\n    this.masked = masked;\n  }\n  /** Raw value */\n\n\n  get value() {\n    return this._value;\n  }\n\n  set value(str) {\n    if (this.value === str) return;\n    this.masked.value = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n  /** Unmasked value */\n\n\n  get unmaskedValue() {\n    return this._unmaskedValue;\n  }\n\n  set unmaskedValue(str) {\n    if (this.unmaskedValue === str) return;\n    this.masked.unmaskedValue = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n  /** Typed unmasked value */\n\n\n  get typedValue() {\n    return this.masked.typedValue;\n  }\n\n  set typedValue(val) {\n    if (this.masked.typedValueEquals(val)) return;\n    this.masked.typedValue = val;\n    this.updateControl();\n    this.alignCursor();\n  }\n  /** Display value */\n\n\n  get displayValue() {\n    return this.masked.displayValue;\n  }\n  /**\n    Starts listening to element events\n    @protected\n  */\n\n\n  _bindEvents() {\n    this.el.bindEvents({\n      selectionChange: this._saveSelection,\n      input: this._onInput,\n      drop: this._onDrop,\n      click: this._onClick,\n      focus: this._onFocus,\n      commit: this._onChange\n    });\n  }\n  /**\n    Stops listening to element events\n    @protected\n   */\n\n\n  _unbindEvents() {\n    if (this.el) this.el.unbindEvents();\n  }\n  /**\n    Fires custom event\n    @protected\n   */\n\n\n  _fireEvent(ev) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    const listeners = this._listeners[ev];\n    if (!listeners) return;\n    listeners.forEach(l => l(...args));\n  }\n  /**\n    Current selection start\n    @readonly\n  */\n\n\n  get selectionStart() {\n    return this._cursorChanging ? this._changingCursorPos : this.el.selectionStart;\n  }\n  /** Current cursor position */\n\n\n  get cursorPos() {\n    return this._cursorChanging ? this._changingCursorPos : this.el.selectionEnd;\n  }\n\n  set cursorPos(pos) {\n    if (!this.el || !this.el.isActive) return;\n    this.el.select(pos, pos);\n\n    this._saveSelection();\n  }\n  /**\n    Stores current selection\n    @protected\n  */\n\n\n  _saveSelection() {\n    if (this.displayValue !== this.el.value) {\n      console.warn('Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly.'); // eslint-disable-line no-console\n    }\n\n    this._selection = {\n      start: this.selectionStart,\n      end: this.cursorPos\n    };\n  }\n  /** Syncronizes model value from view */\n\n\n  updateValue() {\n    this.masked.value = this.el.value;\n    this._value = this.masked.value;\n  }\n  /** Syncronizes view from model value, fires change events */\n\n\n  updateControl() {\n    const newUnmaskedValue = this.masked.unmaskedValue;\n    const newValue = this.masked.value;\n    const newDisplayValue = this.displayValue;\n    const isChanged = this.unmaskedValue !== newUnmaskedValue || this.value !== newValue;\n    this._unmaskedValue = newUnmaskedValue;\n    this._value = newValue;\n    if (this.el.value !== newDisplayValue) this.el.value = newDisplayValue;\n    if (isChanged) this._fireChangeEvents();\n  }\n  /** Updates options with deep equal check, recreates @{link Masked} model if mask type changes */\n\n\n  updateOptions(opts) {\n    const {\n      mask\n    } = opts,\n          restOpts = _objectWithoutPropertiesLoose(opts, _excluded);\n\n    const updateMask = !this.maskEquals(mask);\n    const updateOpts = !objectIncludes(this.masked, restOpts);\n    if (updateMask) this.mask = mask;\n    if (updateOpts) this.masked.updateOptions(restOpts);\n    if (updateMask || updateOpts) this.updateControl();\n  }\n  /** Updates cursor */\n\n\n  updateCursor(cursorPos) {\n    if (cursorPos == null) return;\n    this.cursorPos = cursorPos; // also queue change cursor for mobile browsers\n\n    this._delayUpdateCursor(cursorPos);\n  }\n  /**\n    Delays cursor update to support mobile browsers\n    @private\n  */\n\n\n  _delayUpdateCursor(cursorPos) {\n    this._abortUpdateCursor();\n\n    this._changingCursorPos = cursorPos;\n    this._cursorChanging = setTimeout(() => {\n      if (!this.el) return; // if was destroyed\n\n      this.cursorPos = this._changingCursorPos;\n\n      this._abortUpdateCursor();\n    }, 10);\n  }\n  /**\n    Fires custom events\n    @protected\n  */\n\n\n  _fireChangeEvents() {\n    this._fireEvent('accept', this._inputEvent);\n\n    if (this.masked.isComplete) this._fireEvent('complete', this._inputEvent);\n  }\n  /**\n    Aborts delayed cursor update\n    @private\n  */\n\n\n  _abortUpdateCursor() {\n    if (this._cursorChanging) {\n      clearTimeout(this._cursorChanging);\n      delete this._cursorChanging;\n    }\n  }\n  /** Aligns cursor to nearest available position */\n\n\n  alignCursor() {\n    this.cursorPos = this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT));\n  }\n  /** Aligns cursor only if selection is empty */\n\n\n  alignCursorFriendly() {\n    if (this.selectionStart !== this.cursorPos) return; // skip if range is selected\n\n    this.alignCursor();\n  }\n  /** Adds listener on custom event */\n\n\n  on(ev, handler) {\n    if (!this._listeners[ev]) this._listeners[ev] = [];\n\n    this._listeners[ev].push(handler);\n\n    return this;\n  }\n  /** Removes custom event listener */\n\n\n  off(ev, handler) {\n    if (!this._listeners[ev]) return this;\n\n    if (!handler) {\n      delete this._listeners[ev];\n      return this;\n    }\n\n    const hIndex = this._listeners[ev].indexOf(handler);\n\n    if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\n    return this;\n  }\n  /** Handles view input event */\n\n\n  _onInput(e) {\n    this._inputEvent = e;\n\n    this._abortUpdateCursor(); // fix strange IE behavior\n\n\n    if (!this._selection) return this.updateValue();\n    const details = new ActionDetails( // new state\n    this.el.value, this.cursorPos, // old state\n    this.displayValue, this._selection);\n    const oldRawValue = this.masked.rawInputValue;\n    const offset = this.masked.splice(details.startChangePos, details.removed.length, details.inserted, details.removeDirection, {\n      input: true,\n      raw: true\n    }).offset; // force align in remove direction only if no input chars were removed\n    // otherwise we still need to align with NONE (to get out from fixed symbols for instance)\n\n    const removeDirection = oldRawValue === this.masked.rawInputValue ? details.removeDirection : DIRECTION.NONE;\n    let cursorPos = this.masked.nearestInputPos(details.startChangePos + offset, removeDirection);\n    if (removeDirection !== DIRECTION.NONE) cursorPos = this.masked.nearestInputPos(cursorPos, DIRECTION.NONE);\n    this.updateControl();\n    this.updateCursor(cursorPos);\n    delete this._inputEvent;\n  }\n  /** Handles view change event and commits model value */\n\n\n  _onChange() {\n    if (this.displayValue !== this.el.value) {\n      this.updateValue();\n    }\n\n    this.masked.doCommit();\n    this.updateControl();\n\n    this._saveSelection();\n  }\n  /** Handles view drop event, prevents by default */\n\n\n  _onDrop(ev) {\n    ev.preventDefault();\n    ev.stopPropagation();\n  }\n  /** Restore last selection on focus */\n\n\n  _onFocus(ev) {\n    this.alignCursorFriendly();\n  }\n  /** Restore last selection on focus */\n\n\n  _onClick(ev) {\n    this.alignCursorFriendly();\n  }\n  /** Unbind view events and removes element reference */\n\n\n  destroy() {\n    this._unbindEvents(); // $FlowFixMe why not do so?\n\n\n    this._listeners.length = 0; // $FlowFixMe\n\n    delete this.el;\n  }\n\n}\n\nIMask.InputMask = InputMask;\nexport { InputMask as default };","map":{"version":3,"names":["_","_objectWithoutPropertiesLoose","objectIncludes","DIRECTION","ActionDetails","createMask","maskedClass","MaskElement","HTMLMaskElement","HTMLContenteditableMaskElement","IMask","_excluded","InputMask","constructor","el","opts","isContentEditable","tagName","masked","_listeners","_value","_unmaskedValue","_saveSelection","bind","_onInput","_onChange","_onDrop","_onFocus","_onClick","alignCursor","alignCursorFriendly","_bindEvents","updateValue","mask","maskEquals","_this$masked","Masked","updateOptions","unmaskedValue","value","str","updateControl","typedValue","val","typedValueEquals","displayValue","bindEvents","selectionChange","input","drop","click","focus","commit","_unbindEvents","unbindEvents","_fireEvent","ev","_len","arguments","length","args","Array","_key","listeners","forEach","l","selectionStart","_cursorChanging","_changingCursorPos","cursorPos","selectionEnd","pos","isActive","select","console","warn","_selection","start","end","newUnmaskedValue","newValue","newDisplayValue","isChanged","_fireChangeEvents","restOpts","updateMask","updateOpts","updateCursor","_delayUpdateCursor","_abortUpdateCursor","setTimeout","_inputEvent","isComplete","clearTimeout","nearestInputPos","LEFT","on","handler","push","off","hIndex","indexOf","splice","e","details","oldRawValue","rawInputValue","offset","startChangePos","removed","inserted","removeDirection","raw","NONE","doCommit","preventDefault","stopPropagation","destroy","default"],"sources":["D:/React/PedidoOnline/node_modules/imask/esm/controls/input.js"],"sourcesContent":["import { _ as _objectWithoutPropertiesLoose } from '../_rollupPluginBabelHelpers-6b3bd404.js';\nimport { objectIncludes, DIRECTION } from '../core/utils.js';\nimport ActionDetails from '../core/action-details.js';\nimport '../masked/date.js';\nimport createMask, { maskedClass } from '../masked/factory.js';\nimport MaskElement from './mask-element.js';\nimport HTMLMaskElement from './html-mask-element.js';\nimport HTMLContenteditableMaskElement from './html-contenteditable-mask-element.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport '../masked/pattern.js';\nimport '../masked/base.js';\nimport '../core/continuous-tail-details.js';\nimport '../masked/pattern/input-definition.js';\nimport '../masked/pattern/fixed-definition.js';\nimport '../masked/pattern/chunk-tail-details.js';\nimport '../masked/pattern/cursor.js';\nimport '../masked/regexp.js';\nimport '../masked/range.js';\n\nconst _excluded = [\"mask\"];\n\n/** Listens to element events and controls changes between element and {@link Masked} */\nclass InputMask {\n  /**\n    View element\n    @readonly\n  */\n\n  /**\n    Internal {@link Masked} model\n    @readonly\n  */\n\n  /**\n    @param {MaskElement|HTMLInputElement|HTMLTextAreaElement} el\n    @param {Object} opts\n  */\n  constructor(el, opts) {\n    this.el = el instanceof MaskElement ? el : el.isContentEditable && el.tagName !== 'INPUT' && el.tagName !== 'TEXTAREA' ? new HTMLContenteditableMaskElement(el) : new HTMLMaskElement(el);\n    this.masked = createMask(opts);\n    this._listeners = {};\n    this._value = '';\n    this._unmaskedValue = '';\n    this._saveSelection = this._saveSelection.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._onChange = this._onChange.bind(this);\n    this._onDrop = this._onDrop.bind(this);\n    this._onFocus = this._onFocus.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this.alignCursor = this.alignCursor.bind(this);\n    this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\n    this._bindEvents();\n\n    // refresh\n    this.updateValue();\n    this._onChange();\n  }\n\n  /** Read or update mask */\n  get mask() {\n    return this.masked.mask;\n  }\n  maskEquals(mask) {\n    var _this$masked;\n    return mask == null || ((_this$masked = this.masked) === null || _this$masked === void 0 ? void 0 : _this$masked.maskEquals(mask));\n  }\n  set mask(mask) {\n    if (this.maskEquals(mask)) return;\n\n    // $FlowFixMe No ideas ... after update\n    if (!(mask instanceof IMask.Masked) && this.masked.constructor === maskedClass(mask)) {\n      this.masked.updateOptions({\n        mask\n      });\n      return;\n    }\n    const masked = createMask({\n      mask\n    });\n    masked.unmaskedValue = this.masked.unmaskedValue;\n    this.masked = masked;\n  }\n\n  /** Raw value */\n  get value() {\n    return this._value;\n  }\n  set value(str) {\n    if (this.value === str) return;\n    this.masked.value = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Unmasked value */\n  get unmaskedValue() {\n    return this._unmaskedValue;\n  }\n  set unmaskedValue(str) {\n    if (this.unmaskedValue === str) return;\n    this.masked.unmaskedValue = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Typed unmasked value */\n  get typedValue() {\n    return this.masked.typedValue;\n  }\n  set typedValue(val) {\n    if (this.masked.typedValueEquals(val)) return;\n    this.masked.typedValue = val;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Display value */\n  get displayValue() {\n    return this.masked.displayValue;\n  }\n\n  /**\n    Starts listening to element events\n    @protected\n  */\n  _bindEvents() {\n    this.el.bindEvents({\n      selectionChange: this._saveSelection,\n      input: this._onInput,\n      drop: this._onDrop,\n      click: this._onClick,\n      focus: this._onFocus,\n      commit: this._onChange\n    });\n  }\n\n  /**\n    Stops listening to element events\n    @protected\n   */\n  _unbindEvents() {\n    if (this.el) this.el.unbindEvents();\n  }\n\n  /**\n    Fires custom event\n    @protected\n   */\n  _fireEvent(ev) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    const listeners = this._listeners[ev];\n    if (!listeners) return;\n    listeners.forEach(l => l(...args));\n  }\n\n  /**\n    Current selection start\n    @readonly\n  */\n  get selectionStart() {\n    return this._cursorChanging ? this._changingCursorPos : this.el.selectionStart;\n  }\n\n  /** Current cursor position */\n  get cursorPos() {\n    return this._cursorChanging ? this._changingCursorPos : this.el.selectionEnd;\n  }\n  set cursorPos(pos) {\n    if (!this.el || !this.el.isActive) return;\n    this.el.select(pos, pos);\n    this._saveSelection();\n  }\n\n  /**\n    Stores current selection\n    @protected\n  */\n  _saveSelection( /* ev */\n  ) {\n    if (this.displayValue !== this.el.value) {\n      console.warn('Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly.'); // eslint-disable-line no-console\n    }\n\n    this._selection = {\n      start: this.selectionStart,\n      end: this.cursorPos\n    };\n  }\n\n  /** Syncronizes model value from view */\n  updateValue() {\n    this.masked.value = this.el.value;\n    this._value = this.masked.value;\n  }\n\n  /** Syncronizes view from model value, fires change events */\n  updateControl() {\n    const newUnmaskedValue = this.masked.unmaskedValue;\n    const newValue = this.masked.value;\n    const newDisplayValue = this.displayValue;\n    const isChanged = this.unmaskedValue !== newUnmaskedValue || this.value !== newValue;\n    this._unmaskedValue = newUnmaskedValue;\n    this._value = newValue;\n    if (this.el.value !== newDisplayValue) this.el.value = newDisplayValue;\n    if (isChanged) this._fireChangeEvents();\n  }\n\n  /** Updates options with deep equal check, recreates @{link Masked} model if mask type changes */\n  updateOptions(opts) {\n    const {\n        mask\n      } = opts,\n      restOpts = _objectWithoutPropertiesLoose(opts, _excluded);\n    const updateMask = !this.maskEquals(mask);\n    const updateOpts = !objectIncludes(this.masked, restOpts);\n    if (updateMask) this.mask = mask;\n    if (updateOpts) this.masked.updateOptions(restOpts);\n    if (updateMask || updateOpts) this.updateControl();\n  }\n\n  /** Updates cursor */\n  updateCursor(cursorPos) {\n    if (cursorPos == null) return;\n    this.cursorPos = cursorPos;\n\n    // also queue change cursor for mobile browsers\n    this._delayUpdateCursor(cursorPos);\n  }\n\n  /**\n    Delays cursor update to support mobile browsers\n    @private\n  */\n  _delayUpdateCursor(cursorPos) {\n    this._abortUpdateCursor();\n    this._changingCursorPos = cursorPos;\n    this._cursorChanging = setTimeout(() => {\n      if (!this.el) return; // if was destroyed\n      this.cursorPos = this._changingCursorPos;\n      this._abortUpdateCursor();\n    }, 10);\n  }\n\n  /**\n    Fires custom events\n    @protected\n  */\n  _fireChangeEvents() {\n    this._fireEvent('accept', this._inputEvent);\n    if (this.masked.isComplete) this._fireEvent('complete', this._inputEvent);\n  }\n\n  /**\n    Aborts delayed cursor update\n    @private\n  */\n  _abortUpdateCursor() {\n    if (this._cursorChanging) {\n      clearTimeout(this._cursorChanging);\n      delete this._cursorChanging;\n    }\n  }\n\n  /** Aligns cursor to nearest available position */\n  alignCursor() {\n    this.cursorPos = this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT));\n  }\n\n  /** Aligns cursor only if selection is empty */\n  alignCursorFriendly() {\n    if (this.selectionStart !== this.cursorPos) return; // skip if range is selected\n    this.alignCursor();\n  }\n\n  /** Adds listener on custom event */\n  on(ev, handler) {\n    if (!this._listeners[ev]) this._listeners[ev] = [];\n    this._listeners[ev].push(handler);\n    return this;\n  }\n\n  /** Removes custom event listener */\n  off(ev, handler) {\n    if (!this._listeners[ev]) return this;\n    if (!handler) {\n      delete this._listeners[ev];\n      return this;\n    }\n    const hIndex = this._listeners[ev].indexOf(handler);\n    if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\n    return this;\n  }\n\n  /** Handles view input event */\n  _onInput(e) {\n    this._inputEvent = e;\n    this._abortUpdateCursor();\n\n    // fix strange IE behavior\n    if (!this._selection) return this.updateValue();\n    const details = new ActionDetails(\n    // new state\n    this.el.value, this.cursorPos,\n    // old state\n    this.displayValue, this._selection);\n    const oldRawValue = this.masked.rawInputValue;\n    const offset = this.masked.splice(details.startChangePos, details.removed.length, details.inserted, details.removeDirection, {\n      input: true,\n      raw: true\n    }).offset;\n\n    // force align in remove direction only if no input chars were removed\n    // otherwise we still need to align with NONE (to get out from fixed symbols for instance)\n    const removeDirection = oldRawValue === this.masked.rawInputValue ? details.removeDirection : DIRECTION.NONE;\n    let cursorPos = this.masked.nearestInputPos(details.startChangePos + offset, removeDirection);\n    if (removeDirection !== DIRECTION.NONE) cursorPos = this.masked.nearestInputPos(cursorPos, DIRECTION.NONE);\n    this.updateControl();\n    this.updateCursor(cursorPos);\n    delete this._inputEvent;\n  }\n\n  /** Handles view change event and commits model value */\n  _onChange() {\n    if (this.displayValue !== this.el.value) {\n      this.updateValue();\n    }\n    this.masked.doCommit();\n    this.updateControl();\n    this._saveSelection();\n  }\n\n  /** Handles view drop event, prevents by default */\n  _onDrop(ev) {\n    ev.preventDefault();\n    ev.stopPropagation();\n  }\n\n  /** Restore last selection on focus */\n  _onFocus(ev) {\n    this.alignCursorFriendly();\n  }\n\n  /** Restore last selection on focus */\n  _onClick(ev) {\n    this.alignCursorFriendly();\n  }\n\n  /** Unbind view events and removes element reference */\n  destroy() {\n    this._unbindEvents();\n    // $FlowFixMe why not do so?\n    this._listeners.length = 0;\n    // $FlowFixMe\n    delete this.el;\n  }\n}\nIMask.InputMask = InputMask;\n\nexport { InputMask as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}