{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.expirationMonth = void 0;\n\nfunction verification(isValid, isPotentiallyValid, isValidForThisYear) {\n  return {\n    isValid: isValid,\n    isPotentiallyValid: isPotentiallyValid,\n    isValidForThisYear: isValidForThisYear || false\n  };\n}\n\nfunction expirationMonth(value) {\n  var currentMonth = new Date().getMonth() + 1;\n\n  if (typeof value !== \"string\") {\n    return verification(false, false);\n  }\n\n  if (value.replace(/\\s/g, \"\") === \"\" || value === \"0\") {\n    return verification(false, true);\n  }\n\n  if (!/^\\d*$/.test(value)) {\n    return verification(false, false);\n  }\n\n  var month = parseInt(value, 10);\n\n  if (isNaN(Number(value))) {\n    return verification(false, false);\n  }\n\n  var result = month > 0 && month < 13;\n  return verification(result, result, result && month >= currentMonth);\n}\n\nexports.expirationMonth = expirationMonth;","map":{"version":3,"names":["Object","defineProperty","exports","value","expirationMonth","verification","isValid","isPotentiallyValid","isValidForThisYear","currentMonth","Date","getMonth","replace","test","month","parseInt","isNaN","Number","result"],"sources":["D:/React/PedidoOnline/node_modules/card-validator/dist/expiration-month.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.expirationMonth = void 0;\nfunction verification(isValid, isPotentiallyValid, isValidForThisYear) {\n    return {\n        isValid: isValid,\n        isPotentiallyValid: isPotentiallyValid,\n        isValidForThisYear: isValidForThisYear || false,\n    };\n}\nfunction expirationMonth(value) {\n    var currentMonth = new Date().getMonth() + 1;\n    if (typeof value !== \"string\") {\n        return verification(false, false);\n    }\n    if (value.replace(/\\s/g, \"\") === \"\" || value === \"0\") {\n        return verification(false, true);\n    }\n    if (!/^\\d*$/.test(value)) {\n        return verification(false, false);\n    }\n    var month = parseInt(value, 10);\n    if (isNaN(Number(value))) {\n        return verification(false, false);\n    }\n    var result = month > 0 && month < 13;\n    return verification(result, result, result && month >= currentMonth);\n}\nexports.expirationMonth = expirationMonth;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,eAAR,GAA0B,KAAK,CAA/B;;AACA,SAASC,YAAT,CAAsBC,OAAtB,EAA+BC,kBAA/B,EAAmDC,kBAAnD,EAAuE;EACnE,OAAO;IACHF,OAAO,EAAEA,OADN;IAEHC,kBAAkB,EAAEA,kBAFjB;IAGHC,kBAAkB,EAAEA,kBAAkB,IAAI;EAHvC,CAAP;AAKH;;AACD,SAASJ,eAAT,CAAyBD,KAAzB,EAAgC;EAC5B,IAAIM,YAAY,GAAG,IAAIC,IAAJ,GAAWC,QAAX,KAAwB,CAA3C;;EACA,IAAI,OAAOR,KAAP,KAAiB,QAArB,EAA+B;IAC3B,OAAOE,YAAY,CAAC,KAAD,EAAQ,KAAR,CAAnB;EACH;;EACD,IAAIF,KAAK,CAACS,OAAN,CAAc,KAAd,EAAqB,EAArB,MAA6B,EAA7B,IAAmCT,KAAK,KAAK,GAAjD,EAAsD;IAClD,OAAOE,YAAY,CAAC,KAAD,EAAQ,IAAR,CAAnB;EACH;;EACD,IAAI,CAAC,QAAQQ,IAAR,CAAaV,KAAb,CAAL,EAA0B;IACtB,OAAOE,YAAY,CAAC,KAAD,EAAQ,KAAR,CAAnB;EACH;;EACD,IAAIS,KAAK,GAAGC,QAAQ,CAACZ,KAAD,EAAQ,EAAR,CAApB;;EACA,IAAIa,KAAK,CAACC,MAAM,CAACd,KAAD,CAAP,CAAT,EAA0B;IACtB,OAAOE,YAAY,CAAC,KAAD,EAAQ,KAAR,CAAnB;EACH;;EACD,IAAIa,MAAM,GAAGJ,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,EAAlC;EACA,OAAOT,YAAY,CAACa,MAAD,EAASA,MAAT,EAAiBA,MAAM,IAAIJ,KAAK,IAAIL,YAApC,CAAnB;AACH;;AACDP,OAAO,CAACE,eAAR,GAA0BA,eAA1B"},"metadata":{},"sourceType":"script"}